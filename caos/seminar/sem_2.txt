int main(int argc, char* argv[])


clang -Werror main.c    чтобы warning -> error

./a.out 
echo $? по модулю 256

&& сразу две команды(в случае успеха первой(код возврата 0) будет запущена вторая)

signal что происходит (если код возврата какойто ошибки) можно через echo $? получить

"" чтобы пробелы перестали быть разделителем  \-переход на новую строку

с помощью sh или dash или bash можно автоматизировать запуск программ(читает построчно) разделитель - либо новая строка либо ;

which - путь до команды

sh, dash, bash - различные интерпретаторы(для скриптов лучше использовать dash)

в начале нужно добавить #!/bin/sh - в случае если он простой или #!/usr/bin/python3

команда cd не может быть реалиована с помощью стороннего файла так как она не изменяет состояние процесса

есть команда [] проверяет  и возвращает код возврата (1 or 0) (как if)

в bash нельзя писать пробелы рядом с =

export a позволяет использовать в наследниках

exit - выйти из дочерниз процессов


a=345
echo asd${a}asdasd
//asd345asdasd

есть разница между " и ' в двойных происходит подстановка переменных вместо $, в ' - не происходит

files=ls
выведет просто строку ls
files=`ls`
выведет то что выдает ls
но лучше files=$(ls)

files=$(echo main.c)
cat $files
будет код программы main.c

команда basename берет строку и отбрасывает все что идет до последнего /
